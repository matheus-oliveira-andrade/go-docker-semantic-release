name: CI/CD
on:
  push: 
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build
        shell: bash
        run: go build -v ./...  

  semantic-release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:    
          persist-credentials: false

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20'        

      - run: npm i semantic-release @semantic-release/exec             

      - name: semantic-release
        run: npx semantic-release      
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      

      - name: check was generated version
        run: |
          if [ ! -f "version.txt" ]; then
            echo "No new versions generated"
            exit 1
          fi

      - name: upload version file
        uses: actions/upload-artifact@v4
        with:
          name: versionfile
          path: version.txt 

  image-build-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - uses: actions/checkout@v4
        with:    
          persist-credentials: false 

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: download version file
        uses: actions/download-artifact@v4
        with:
          name: versionfile
          path: ./

      - name: Set up tags names
        shell: bash
        run: |
          VERSION=$(cat version.txt)
          IMAGE_NAME=go-hello-world
          IMAGE_TAG_VERSION="$IMAGE_NAME:$VERSION"
          IMAGE_TAG_LATEST="$IMAGE_NAME:latest"

          echo "IMAGE_TAG_VERSION=$IMAGE_TAG_VERSION" >> $GITHUB_ENV
          echo "IMAGE_TAG_LATEST=$IMAGE_TAG_LATEST" >> $GITHUB_ENV          
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: | 
            "$DOCKERHUB_USERNAME/$IMAGE_TAG_VERSION"
            "$DOCKERHUB_USERNAME/$IMAGE_TAG_VERSION"
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
